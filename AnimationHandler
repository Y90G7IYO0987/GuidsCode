--Код Обновлен от 19.04.2025

repeat task.wait(2.5) until game:GetService('Players').LocalPlayer.Character ~= nil

task.wait(.5)

local replicatedStorage = game:GetService('ReplicatedStorage')
local modules = replicatedStorage:WaitForChild('Modules')
local moduleUI = require(modules:WaitForChild('ModuleUI'))

local player = game.Players.LocalPlayer
local playerGui = player.PlayerGui

local changingSize,baseSize = 1.3,1
local wait_ = .2
local cooldownTime = .1

local cooldown = false

local changeColor = 'Red'
local baseColor = 'White'

local tableOfButtons = {
	script.Parent:WaitForChild('Animation1'),
	script.Parent:WaitForChild('Animation2'),
	script.Parent:WaitForChild('Animation3'),
}

--Анимация 1=сетка Анимация 2 = размер

--Animation 2
local numberOfScale = 1.1
local baseValue = 1
local animationWait = .3
local cooldown_ = false
local typeOfChange = 2 -- тип изменений 1=сетка, 2=размеру
local thicknessNumber = 3.5 -- размер сетки

for i, button in pairs(tableOfButtons) do 
	if button:IsA('TextButton') and button ~= nil then 
		button.MouseButton1Click:Connect(function()
			if cooldown == false then
				cooldown = true								

				if button:FindFirstChild('AnimationVariant') and button:FindFirstChild('Animatio3nVariant').Value ~= 'Animation2' then					
					if button:FindFirstChild('Scale') and button:FindFirstChild('AnimationVariant') and button:FindFirstChild('AnimationVariant').Value ~= nil then
						moduleUI[button:FindFirstChild('AnimationVariant').Value](button:FindFirstChild('Scale'),changingSize,baseSize,wait_,changeColor,button,baseColor)
					elseif button:FindFirstChild('Scale') or button:FindFirstChildOfClass('UIScale') and button:FindFirstChildOfClass('StringValue') and button:FindFirstChildOfClass('StringValue').Value ~= nil then						
						if button:FindFirstChildOfClass('StringValue') and button:FindFirstChildOfClass('StringValue').Value ~= nil and button:FindFirstChildOfClass('StringValue').Value ~= 'Animation2' then
							moduleUI[button:FindFirstChildOfClass('StringValue').Value](button:FindFirstChild('Scale'),changingSize,baseSize,wait_,changeColor,button,baseColor)						
						end
					end
				end

				task.wait(cooldownTime)

				cooldown = false
			end
		end)
		button.MouseEnter:Connect(function()
			if cooldown_ == false then 
				cooldown_ = true

				if button:FindFirstChild('Scale') and button:FindFirstChild('AnimationVariantOfMouse') and button:FindFirstChild('AnimationVariantOfMouse').Value ~= nil then
					if button:FindFirstChild('AnimationVariantOfMouse').Value == 'Animation1' then
						if typeOfChange ~= 2 then
							local needParent = button -- нужная(ый) кнопка/родитель элемента
							local color = nil

							moduleUI.Animation2(animationWait,needParent,typeOfChange,color,nil,nil,nil,nil)
						else
							warn('Поменяй переменную TypeOfChange на значение 1! Иначе не сработает!!')
						end

					elseif button:FindFirstChild('AnimationVariantOfMouse').Value == 'Animation2' then		
						print('ok')
						moduleUI.Animation2(animationWait,nil,typeOfChange,nil,button:FindFirstChild('Scale'),numberOfScale,baseValue,thicknessNumber)
					end
				elseif button:FindFirstChild('Scale') and button:FindFirstChildOfClass('StringValue') and button:FindFirstChildOfClass('StringValue').Value ~= nil then
					if button:FindFirstChildOfClass('StringValue').Value == 'Animation1' then
						print('starting')
						if typeOfChange ~= 2 then 
							local needParent = button -- нужная(ый) кнопка/родитель элемента
							local color = nil

							moduleUI.Animation2(animationWait,needParent,typeOfChange,color,nil,nil,nil,nil)
						else
							warn('Поменяй переменную TypeOfChange на значение 1! Иначе не сработает!!')
						end

					elseif button:FindFirstChildOfClass('StringValue').Value == 'Animation2' then					
						moduleUI.Animation2(animationWait,nil,typeOfChange,nil,button:FindFirstChild('Scale'),numberOfScale,baseValue,thicknessNumber)
					end
				elseif button:FindFirstChildOfClass('UIScale') and button:FindFirstChild('AnimationVariantOfMouse') and button:FindFirstChild('AnimationVariantOfMouse').Value ~= nil then
					if button:FindFirstChild('AnimationVariantOfMouse').Value == 'Animation1' then
						if typeOfChange ~= 2 then
							local needParent = button -- нужная(ый) кнопка/родитель элемента
							local color = nil

							moduleUI.Animation2(animationWait,needParent,typeOfChange,color,nil,nil,nil,nil)
						else
							warn('Поменяй переменную TypeOfChange на значение 1! Иначе не сработает!!')
						end
					elseif button:FindFirstChild('AnimationVariantOfMouse').Value == 'Animation2' then					
						moduleUI.Animation2(animationWait,nil,typeOfChange,nil,button:FindFirstChildOfClass('UIScale'),numberOfScale,baseValue,thicknessNumber)
					end
				elseif button:FindFirstChildOfClass('UIScale') and button:FindFirstChildOfClass('StringValue') and button:FindFirstChildOfClass('StringValue').Value ~= nil then
					if button:FindFirstChildOfClass('StringValue').Value == 'Animation1' then
						if typeOfChange ~= 2 then 
							local needParent = button -- нужная(ый) кнопка/родитель элемента
							local color = nil

							moduleUI.Animation2(animationWait,needParent,typeOfChange,color,nil,nil,nil,nil)
						else 
							warn('Поменяй переменную TypeOfChange на значение 1! Иначе не сработает!!')
						end					
					elseif button:FindFirstChildOfClass('StringValue').Value == 'Animation2' then					
						moduleUI.Animation2(animationWait,nil,typeOfChange,nil,button:FindFirstChildOfClass('UIScale'),numberOfScale,baseValue,thicknessNumber)
					end
				end

				task.wait(cooldownTime)

				cooldown_ = false
			end

		end)
	end
end
